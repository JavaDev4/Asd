import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api")
public class CSVProcessingController {

    @Autowired
    private RestTemplate restTemplate;

    @Autowired
    private CSVService csvService;

    private final String predefinedUrl = "http://example.com/api/number=";

    @GetMapping("/process-csv")
    public void processCSV() throws IOException {
        List<String> ecis = new ArrayList<>();
        HttpHeaders headers = new HttpHeaders();
        headers.set("Your-Header-Key", "Your-Header-Value");

        csvService.readCSV().forEach(number -> {
            String url = predefinedUrl + number;
            HttpEntity<String> entity = new HttpEntity<>(headers);

            ResponseEntity<List<Map<String, Object>>> response = restTemplate.exchange(
                url, 
                HttpMethod.GET, 
                entity, 
                new ParameterizedTypeReference<List<Map<String, Object>>>() {}
            );

            if (response.getBody() != null) {
                response.getBody().forEach(item -> {
                    if (item.containsKey("eci")) {
                        ecis.add(item.get("eci").toString());
                    }
                });
            }
        });

        csvService.writeECIToCSV(ecis);
    }
}
---------


package com.yourpackage.service;

import org.springframework.stereotype.Service;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Service
public class CSVService {

    private final String csvReadFilePath = "path/to/your/input/csvfile.csv";
    private final String csvWriteFilePath = "path/to/your/output/csvfile.csv";

    public List<String> readCSV() throws IOException {
        List<String> gcids = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(csvReadFilePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                gcids.add(line.trim());
            }
        }
        return gcids;
    }

    public void writeECIToCSV(List<String> ecis) throws IOException {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(csvWriteFilePath))) {
            for (String eci : ecis) {
                writer.write(eci);
                writer.newLine();
            }
        }
    }
}
